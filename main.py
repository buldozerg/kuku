import json
import asyncio
import logging
import httpx
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import Command
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

TOKEN = os.getenv("TOKEN")
TON_API_KEY = os.getenv("TON_API_KEY")
CHECK_TOKEN = os.getenv("CHECK_TOKEN")
COMMAND_ADD = os.getenv("COMMAND_ADD", "addforkukuadminlong")
COMMAND_ERASE = os.getenv("COMMAND_ERASE", "eraseforkukuadminlong")
COMMAND_CHECK = os.getenv("COMMAND_CHECK", "checkforkukuadminlong")

bot = Bot(token=TOKEN)
dp = Dispatcher()

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
user_state = {}
last_total_balance = 0
last_user_balances = {}  # –•—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –±–∞–ª–∞–Ω—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –∏ –±–∞–ª–∞–Ω—Å–æ–º (–Ω–µ –º–µ–Ω—è—é—Ç—Å—è)

@dp.message(Command(COMMAND_ADD))
async def add_user(message: Message):
    user_state[message.from_user.id] = 'waiting_for_nickname'
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫–Ω–µ–π–º:")


@dp.message(Command(COMMAND_ERASE))
async def erase_user(message: Message):
    user_state[message.from_user.id] = 'waiting_for_erase_nickname'
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —É–¥–∞–ª–∏—Ç—å:")


@dp.message(Command(COMMAND_CHECK))
async def check_users(message: Message):
    data = load_data()
    users = data["users"]
    if not users:
        await message.answer("–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.")
        return

    response = "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n"
    for user in users:
        username = user["username"]
        wallet = user["wallet"]
        new_balance = await get_wallet_balance(wallet)
        change = new_balance - user["balance"]
        user["balance"] = new_balance  # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
        response += f"\nüîπ {username}\nüí≥ {wallet}\nüí∞ {new_balance} ({change:+.2f})\n"

    save_data(data)
    await message.answer(response)

# –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –º–µ–Ω—è—é—Ç—Å—è

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    asyncio.run(dp.start_polling(bot))
